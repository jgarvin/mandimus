from Actions import Text
from rules.SeriesMappingRule import SeriesMappingRule
from rules.emacs.Emacs import Emacs
from rules.emacs.Text import EmacsText
from rules.emacs.Cmd import runEmacsCmd, Cmd
from rules.Rule import registerRule
from rules.emacs.Base import EmacsBase

@registerRule
class Lisp(EmacsBase):
    majorMode = "emacs-lisp-mode"
    
    keywords = [
        ["1-", "one minus"],
        ["1+", "one plus"],
        "add-to-list",
        "and",
        ["aref", "A ref"],
        "assert",
        "beginning-of-thing",
        "bounds-of-thing-at-point",
        "buffer-substring",
        "car",
        "catch",
        ["cdr", "cooder"],
        "char-to-string",
        "concat",
        ["cond", "conned"],
        "condition-case",
        "cons",
        "defadvice",
        "defconst",
        "defmacro",
        "defstruct",
        "defun",
        "defvar",
        "defvar-local",
        ["delq", "del Q"],
        "dolist",
        "dotimes",
        "error",
        ["eq", "E Q"],
        "equal",
        "eval",
        ["fboundp", "F bound P"],
        "format",
        "function",
        "funcall",
        "gensym",
        "global-set-key",
        "goto-char",
        "identity",
        "if",
        ["incf", "ink F"],
        "insert",
        "interactive",
        "lambda",
        "let",
        "length",
        "list",
        "local-set-key",
        "loop",
        ["&key", "key"],
        "nil",
        "map",
        "mapcar",
        "mapconcat",
        "max",
        "member",
        ["memq", "mem Q"],
        "message",
        "min",
        "not",
        ["nth", "enth"],
        "null",
        ["&optional", "optional"],
        "or",
        "point",
        "push",
        "prog1",
        "prog2",
        "progn",
        "propertize",
        "provide",
        ["remq", "rem Q"],
        "re-search-backward",
        "re-search-forward",
        "require",
        ["&rest", "rest"],
        "quote",
        "save-current-buffer",
        "save-excursion",
        "save-match-data",
        "save-restriction",
        "setcar",
        ["setq", "set Q"],
        ["setq-default", "set Q default"],
        "set-window-point",
        ["string=", "string equal"],
        "sort",
        "subseq",
        "thing-at-point",
        "throw",
        "track-mouse",
        "unless",
        "unwind-protect",
        "window-start",
        "window-end",
        "with-current-buffer",
        "with-selected-frame",
        "with-selected-window",
        "when",
        "while",
    ]
